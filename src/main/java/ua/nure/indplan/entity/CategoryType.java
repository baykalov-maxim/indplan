package ua.nure.indplan.entity;
// Generated Apr 22, 2017 3:48:50 PM by Hibernate Tools 5.1.0.Alpha1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Categorytype generated by hbm2java
 */
@Entity
@Table(name = "categorytype", uniqueConstraints = @UniqueConstraint(columnNames = "title"))
@NamedQuery(name="CategoryType.findAll", query="SELECT t FROM CategoryType t")
public class CategoryType implements java.io.Serializable {

	private int id;
	private String title;
	private boolean deleted;
	private Set<Category> categories = new HashSet<Category>(0);

	public CategoryType() {
	}

	public CategoryType(int id, String title) {
		this.id = id;
		this.title = title;
	}

	public CategoryType(int id, String title, Set<Category> categories) {
		this.id = id;
		this.title = title;
		this.categories = categories;
	}

	@Id
	@GeneratedValue
	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@Column(name = "title", unique = true, nullable = false)
	public String getTitle() {
		return this.title;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	@Column(name = "deleted", nullable = false, columnDefinition="b'0")
	public boolean isDeleted() {
		return this.deleted;
	}

	public void setDeleted(boolean deleted) {
		this.deleted = deleted;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "type")
	public Set<Category> getCategories() {
		return this.categories;
	}

	public void setCategories(Set<Category> categories) {
		this.categories = categories;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((title == null) ? 0 : title.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		CategoryType other = (CategoryType) obj;
		if (title == null) {
			if (other.title != null)
				return false;
		} else if (!title.equals(other.title))
			return false;
		return true;
	}

	@Override
	public String toString() {
		return title;
	}

}
